name: build-apk.yml

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget curl git gradle

      - name: Install Android commandline tools & SDK components
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          # Move to expected path
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/ || true
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --licenses || true
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Show Java & Gradle
        run: |
          java -version
          gradle -version

      - name: Build debug APK
        working-directory: ${{ github.workspace }}
        run: |
          # prefer gradlew if present, otherwise use system gradle
          if [ -f "./gradlew" ]; then
            chmod +x ./gradlew
            ./gradlew assembleDebug --no-daemon
          else
            gradle assembleDebug --no-daemon
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: UrbanNusaCyberr-apk
          path: app/build/outputs/apk/debug/*.apk
